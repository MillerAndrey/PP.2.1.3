Index: src/main/java/App.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import org.springframework.context.ApplicationContext;\r\nimport org.springframework.context.annotation.AnnotationConfigApplicationContext;\r\n\r\npublic class App {\r\n    public static void main(String[] args) {\r\n        ApplicationContext applicationContext =\r\n                new AnnotationConfigApplicationContext(AppConfig.class);\r\n        HelloWorld bean =\r\n                (HelloWorld) applicationContext.getBean(\"helloworld\");\r\n        System.out.println(bean.getMessage());\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/App.java b/src/main/java/App.java
--- a/src/main/java/App.java	(revision 886709bd9f9952cfb3ecac6f59ca708921f649b4)
+++ b/src/main/java/App.java	(date 1679922429170)
@@ -5,8 +5,16 @@
     public static void main(String[] args) {
         ApplicationContext applicationContext =
                 new AnnotationConfigApplicationContext(AppConfig.class);
-        HelloWorld bean =
-                (HelloWorld) applicationContext.getBean("helloworld");
+        HelloWorld bean = (HelloWorld) applicationContext.getBean("helloworld");
         System.out.println(bean.getMessage());
+        System.out.println(bean2.getMessage());
+        Cat beanCat = (Cat) applicationContext.getBean("cat");
+        Cat beanCat2 = (Cat) applicationContext.getBean("cat");
+        System.out.println(beanCat.getMessage());
+        System.out.println(beanCat.getMessage());
+
+
+        System.out.println(bean == bean2);
+        System.out.println(beanCat == beanCat2);
     }
 }
\ No newline at end of file
Index: src/test/java/AppTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//import org.junit.Assert;\r\n//import org.junit.Test;\r\n//import org.junit.runner.RunWith;\r\n//import org.springframework.beans.factory.annotation.Autowired;\r\n//import org.springframework.context.ApplicationContext;\r\n//import org.springframework.test.context.ContextConfiguration;\r\n//import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\r\n//\r\n//\r\n//@RunWith(SpringJUnit4ClassRunner.class)\r\n//@ContextConfiguration(classes = AppConfig.class)\r\n//public class AppTest {\r\n//\r\n//    @Autowired\r\n//    private ApplicationContext applicationContext;\r\n//\r\n//    @Test\r\n//    public void mainTest() {\r\n//        HelloWorld tree =\r\n//                applicationContext.getBean(HelloWorld.class);\r\n//        HelloWorld leaf =\r\n//                applicationContext.getBean(HelloWorld.class);\r\n//\r\n//        Cat one = applicationContext.getBean(Cat.class);\r\n//        Cat two = applicationContext.getBean(Cat.class);\r\n//\r\n//        Assert.assertSame(\"Тест провален, не корректная настройка бина HelloWorld\", tree, leaf);\r\n//        Assert.assertNotSame(\"Тест провален, не корректная настройка бина Cat\", one, two);\r\n//    }\r\n//}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/AppTest.java b/src/test/java/AppTest.java
--- a/src/test/java/AppTest.java	(revision 886709bd9f9952cfb3ecac6f59ca708921f649b4)
+++ b/src/test/java/AppTest.java	(date 1679922429180)
@@ -1,30 +1,30 @@
-//import org.junit.Assert;
-//import org.junit.Test;
-//import org.junit.runner.RunWith;
-//import org.springframework.beans.factory.annotation.Autowired;
-//import org.springframework.context.ApplicationContext;
-//import org.springframework.test.context.ContextConfiguration;
-//import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
-//
-//
-//@RunWith(SpringJUnit4ClassRunner.class)
-//@ContextConfiguration(classes = AppConfig.class)
-//public class AppTest {
-//
-//    @Autowired
-//    private ApplicationContext applicationContext;
-//
-//    @Test
-//    public void mainTest() {
-//        HelloWorld tree =
-//                applicationContext.getBean(HelloWorld.class);
-//        HelloWorld leaf =
-//                applicationContext.getBean(HelloWorld.class);
-//
-//        Cat one = applicationContext.getBean(Cat.class);
-//        Cat two = applicationContext.getBean(Cat.class);
-//
-//        Assert.assertSame("Тест провален, не корректная настройка бина HelloWorld", tree, leaf);
-//        Assert.assertNotSame("Тест провален, не корректная настройка бина Cat", one, two);
-//    }
-//}
+import org.junit.Assert;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.context.ApplicationContext;
+import org.springframework.test.context.ContextConfiguration;
+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
+
+
+@RunWith(SpringJUnit4ClassRunner.class)
+@ContextConfiguration(classes = AppConfig.class)
+public class AppTest {
+
+    @Autowired
+    private ApplicationContext applicationContext;
+
+    @Test
+    public void mainTest() {
+        HelloWorld tree =
+                applicationContext.getBean(HelloWorld.class);
+        HelloWorld leaf =
+                applicationContext.getBean(HelloWorld.class);
+
+        Cat one = applicationContext.getBean(Cat.class);
+        Cat two = applicationContext.getBean(Cat.class);
+
+        Assert.assertSame("Тест провален, не корректная настройка бина HelloWorld", tree, leaf);
+        Assert.assertNotSame("Тест провален, не корректная настройка бина Cat", one, two);
+    }
+}
